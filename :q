---
title: week_info
date: 2017-08-21 03:25:02
tags: week_info
---

# 记录每周定下的节点
- 看自己是不是可以完成, 看看自己能完成多久.


## 2017/08/14 - 2017/08/20
1. 购买vutlr 服务器, 搭建shadowsocks服务器, 连接外网.  (OK)
2. 学习高数. (Failure)


## 2017/08/21 - 2017/08/27
1. 找到的理解计算机操作系统是怎样运作的书籍. (Failure)
   (深入理解计算机系统暂定, 先大概扫一遍...看看值不值得看一下, 或者说适合我看一下...)
   决定先扫一下...., 看看是不是盛名之下...还是说货真价实.done, 大体看了下, 我现在看还是不合适的, 太偏向底层了
   IO多路复用,线程和进程的部分或许可以看一下, 这个要在此确认.
   现在看对于我来说不合适!!!
2. hexo 添加评论功能.(OK)
   (disqus 已添加), 和书签分类功能.(tags && categories 已添加)
3. nginx + supervisor + tornado 配置启动.(OK)
   (supervisor 配置启动tornado程序完成. 配置nginx映射接口也完成了哇咔咔.)
   配置完成, 端口可映射,资源加载分离css和js, 分离也显示了oh yeah. (OK)
4. 翻一翻高数.(Done) 
   先看一看算法, 肯定是有必要看下去, 但高等数学(同济版)中并不是所有的知识都需要看,
   我有必要去看下有没有, 计算机数学相关的...
5. 关于阻塞非阻塞, 异步同步问题(Failure)
   (有一定了解, 但实现原理不了解 future, callback, 需要对IOloop模块进行了解.)
6. 看看能不能先写个登陆用的页面.(OK)
   这个我竟然很快写出来了, js写完了, 端口成功.
7. js 语言看下, 觉得还不错的样子.(OK)
   看了些基本语法.
8. 关于数据结构和算法的书籍.(OK)
   学院派与实践派. 
   学院派冗长无味, 真的需要数学基础, 要不然真的搞不定, 看着不过瘾.
   实践派毫无系统, 实践派更偏重实现和实现过程中对全局的把握和考虑.
   希望有一天,我能自己推翻我以上的言论.


## 2017/08/28 - 2017/09/03 (这周的姿势看来有些要移到下周继续了)
1. 熟悉effect python中的进阶姿势.(ok going)
   python loggin库.
   python 判断继承类是否为父类.
   python __solt__ 是否可继承(不可以:)).
   python try finally return 返回问题.
   python mro 继承链问题, 完善.
   python 单例模式的实现, 及优劣.
   python __metaclass__
2. 熟悉常用查找及排序算法.(failure)
   终于打算开始了, 开始简单的入手吧 (开始了, 开始了个屁啊).
3. 尝试使用orm库.(doing 这轮估计轮不完了...mysql毕竟很大.)(ok going)
   sqlalchemy 已经开始了 :)   
   还是现在廖老师的网站上先简单的练练手, 免得手生. 看完了, 不尽兴...(感觉自己对mysql原理不熟悉了)
   还是要看看关于mysql session和其相关的东东.
   peewee
4. 继续完善自己的小项目...关于前端js和后端交互.(ok going) 
   预计写出登陆后后进入的首页(跳转成功).
   如果顺利...看看如何控制cookie.(看了下, 自己的实践不足以使自己透彻的理解, cookie前端保存机制.)
   用一下github上的redis-session-tornado项目(OK)
   此项目缺少异常处理的编写.已补上.(OK)
   tornado 日志模块.(OK) 
5. 了解使用MQ队列.(https://tech.meituan.com/mq-design.html 美团技术点评团队 这个比较叼, 干货满满.) (ok going)
   Thrift Dubbo(阿里java系...) RPC框架. (Memchached, Redis. 重新写一套RPC框架.) 又要展开一大坨, O__O "…
   开始看的还好, 写的太多了, 脑容量爆炸... 
   性能相关感觉写没头没脑的.(叫人看了发懵)
   看完了, 找个轻量级的MQ队列试一下看看个个模块间的功能.(Doing kafka好重, rabbitmq Rocketmq)
   (http://jm.taobao.org/2016/04/01/kafka-vs-rabbitmq-vs-rocketmq-message-send-performance/) 
   阿里中间件团队博客.看的不过瘾啊, 未完待续...坑爹呢.
   RabbitMq 基于Erlang语言编写的开源消息队列.(Erlang O__O) 
   kafka 好屌啊, 但会不会太重了呢...有点爆炸的感觉啊. (Scala语言开发)
   RocketMq ali kafka 进阶版么(纯Java 开发)
   自问:我是为了什么看的这个... 钱么还是兴趣? 都有, 我很贪心的:)
   先了解下关于分布式消息队列所需要的各个组件和模型吧
   ZeroMQ 或许是一个实践的好的开始.
   我先搂一眼RocketMq 10min 每一个说好了的10分钟教程, 都不是10分钟.
   有点晚了, 11:30, 我竟然劝自己早睡, 哇哈哈, its time to practice tomorrow
   here we go!
   开始是一通装环境啊, RocketMq 装的还是慢啊...各种小问题...
   跑了下...嗯, 服务器内存买小了...确切的说, 你就一个样例, 你搞那么大的内存搞个毛线啊O__O "….
   下图解释了的一些疑问[]
   ![RocketMQ](/images/RocketMq_Struct.png)
   吐槽自己的英文水平...有些差.
   可能要把这个抽出来单独写一篇大的...
6. 解微服务架构.(OK  彭晟杰 看了下这个... 有疑问如何实现负载分压, 如何实现微服务划分, 如何实现信息交互.) (OK)
   通过不同的业务服务模块实现微服务的划分. 
   关于如何实现微服务之间的通信, 在最近的学习中的到了答案...答案就是我看到的RPC(Remote Produce Call)
   远程服务调用.通过此服务实现服务间的信息交互.
7. 上周遗漏的感觉那个阻塞和非阻塞可能会遗漏...希望这是错觉.在python skill模块看了下(OK)
8. 了解下关于nginx的负载分压方式, 及反向代理原理.(failure)
9. 工作中优化和前进速度之间, 纠结不已...要不要优化下呢.毅然决然的开始优化了...泪奔中. 优化结束, 爽(OK)


## 2017/09/04 - 2017/09/08 (有些姿势是继续上周的...感慨有些东西真是重啊)   感慨自己时间不够...

1. 熟悉effect python中的进阶姿势.(OK)
   python 闭包(OK)
   python 装饰器(OK)
   python property(OK)
   python __setattr__, __getattr__ (OK)
2. 熟悉常用查找及排序算法(上周失败了的, 这破玩意没个头, 我丢...任命吧, 找本算法持续的啃吧)(OK)
   在其中的一个博文里写了写简单的了...
   調整了一波markdown
   归并和快排, 写到简单排序里, 呵呵, 那个SB起的头. 这两个涉及递归什么的...简直了.(Doing)
   一通分析, 递归继续条件, 递归终结条件.
   算法更多的是思想...结果这是我的弱项啊.
   回到原点了, 又要找书开始啃了...
3. ORM库 sqlalchemy, 继续看官方文档.(Failure)
   hello sqlalchemy
   揍你了, sqlalchemy
4. 继续了解使用MQ队列, kafka or RocketMq. (两个的官方文档都不错, 不错是不错, 看着比sqlalchemy还烦躁.)(OK)
   关于技术选型问题, 这个要提前搞起来. 模型相关还是要先搞的.
   模型熟悉和技术实现.
   其实主要是为了提高工资, 对自己的技术有拓展, 还有向自己的方向走了:)
   hello kafka&&Scala
   揍你了, kafka(Doing) 
   安装成功, 可以消息的分发了, 正在持续的学习中...
   这个可能要前置一篇Thrift, 或者dubbo, 这个被搞倒了...(Doing)
   装个Thrift真是装的心都碎了....要不要那么多东西...感觉自己回到了手写Makefile的时代...我快爱不动了..
   我最终用了我自己最想不到的方式...结果他生效了...我到底是哭呢还是笑呢...心塞.
   安装好了, 试验一下...
   了解了一下概念RPC网络通信协议. IDL(Interface description language)
   有关RPC协议及RPC协议实现框架...(https://www.zhihu.com/question/25536695), 第一个和第二个结合起来看效果更好.
   公欲予其事, 必先知道是咋回事...:), 感慨啊,成熟型项目的强大, 嘛都有...
   生成一大堆文件, gen py感觉还是描述的更清晰...
   万变不离其宗啊, 感慨网络和计算机还有算法的基础知识是多么的重要...
5. 了解下关于nginx的负载分压方式(上周失败了的...这周也有可能失败...O__O "… Failure)
   那个rewrite到底是搞毛线的...那么多的说明...
6. 关于工作中的问题. 为什么我们的pythonsql中加锁了, 怎么想都想不通啊. (OK)
   和同事讨论了半天, 也没个结果...明天过去看, 初步怀疑是实例化的时候单例模式出错了.
   依然决然的投入进去了...泪奔:), 搞出bug了...明天解决. bug修复.


## 2017/09/11- 2017/09/17 (有些姿势是继续上周的...)(时不我待)

1. 熟悉effect python中的进阶姿势(Doing).
   有关闭包, 生成器, 协程的使用业务场景...
   python sorted 排序key使用.
2. 熟悉常用查找及排序算法.
   随心所欲...兴趣使然才应该是最好的状态.
   就一个动态规划吧...:)
   快忘干净了...聊一眼先.(有点头绪..)
   我感觉这是个大坑...填坑中..
   到底是算法导论还是算法竞赛入门经典...太弱逼了...
   爬上过那座山, 我应该就不会恐惧这座山的高了吧, 即使我最后可能还是在山脚下,
   我爬上过那座山, 即使我在山脚下, 我知道我曾征服...我也必将征服.
   陷入到算法的海洋里...要溺水了... (数据结构与算法太偏重于理论了, 各种公式搞得飞起...)
   我最好搞一本工程方面的书开搞才行...(推荐的算法这本书竟然是Java版的...呵呵呵, Java对我来说应该是不难的...)
   再次进入纠结状态...算法导论...算法: 第四版(JAVA)
   兴趣应该是最好的老实才对啊...我好像对她没那么多兴趣啊...吼吼
   有一种兜兜转转回到原点的赶脚...
   现在回想, 应该是数据结构和算法出了问题...
   继续选型...回到原点啊md, 我干.(先搂个pdf看看...)
   确认失败, 心塞, 难过. 要检讨下, 哪里除了问题...
   对于算法, 我想我其实是害怕了...(怕个球...)
3. ORM库 sqlalchemy, 继续看官方文档.(这个上周失败了...)
4. 继续了解使用MQ队列, Kafka. RPC(Remote Process Call)协议框架, thrift.(OK)
   RFC:关于wiki, 不了解通讯协议和传输协议的作用及其用意.
   个人粗浅的理解(得到证实, get it): 
   通讯协议: 传输内容的序列化方式.
   传输协议: 传输内容的传输方式. 
   要在自己的服务器上再去实践一下...(已经实践了 thrift 中的 tutorial)
   一个答不上来的问题引发的血案...
   这篇博客不错, 简洁明了的讲了thrift, 我只看了前大半部分, 后来关于不同server的区别.
   给出了使用IDL语言描述语法.
   已经扫过了...写的很好...有关server的选择...Nice:)
   http://www.cnblogs.com/cyfonly/p/6059374.html
   扫一眼IDL语言...
   IDL 描述服务接口. 最应该做的就是写一个关于thrift的程序和专题.(到了通过实践去提升的时候了, 边写边去思考使用和逻辑...)
   这篇博客写的不错...关于Thrift关键字.
   http://1csh1.github.io/2017/02/21/Thrift%20IDL%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/
   这部分好像跑偏了...先要搞一个编辑器开发环境.
   编辑器器已经搞定了(sublime 安装 thrift 插件)...so...I have know something...:)
   周末要写一篇关于thrift的使用的文章...(Mark)
5. 了解下关于nginx的负载分压方式(OK)
   此博客:
   https://taozj.org/201612/nginx-load-balancing.html
   写的很好, 满足了我对负载分压方知识的饥渴.Nice :)
   关于worker的数量问题，通常的建议是：
   CPU密集型：比如处理大量的TCP/IP，SSL，或压缩时，Nginx worker进程的数量应当和CPU核的数量一致。
   磁盘I/O密集型：提供文件内容，或者大量的代理，这种情况下，worker进程的数量可以是CPU核数的1.5或2倍。
   关于Nginx具体实现架构和内部逻辑.
   感慨自己的弱逼, 和大神的叼炸天的存在. 还有一大堆东西要去了解.
6. Tmux(OK)
   被各种博客安利了无数次...决定在今晚试一下:)
   突然想起来如果我搞分布式kafka那一套...岂不是要开很多窗口.
   强势吐槽: C+b +c, 就不能多打几个字吗? 是C+b按完之后再按C, 不是一起按...差点被搞的没兴趣... 
   恍恍惚惚的感觉确实很吊啊, 哇哈哈哈.:)
   确实很厉害啊...这个要多加运用才行, 才能熟练掌握其中的多个快捷键.
   当有开大量的窗口需求的时候,tmux确实是利器.
7. 关于框架的认知...框架也是人写的, 那么人写的是不是就可以对其进行扩展和修改呢...(OK)
   Sure!
8. 关于平台的稳定性压力测试...如何做(OK).
   这个任务被打断了...
   Jmeter 已经搭建好了
   现在在写接口文档输出报告...
   Google风格 + pydoc
   先牛刀小试一个文件夹.失败...不要退却.
   看来只有加班搞了
   问题1 按目录生成.html文件(可能会随着下面的问题一并解决掉..., 并没有一并解决掉, 系统的环境变量问题依然存在)
         尝试在请求内使用生成命令看是不是可以解决掉系统变量问题.
         心塞, 继续修改源代码,OK, 成型了... 冗余信息过多... 如何清理冗余数据...过多的继承数据...(OK)
         一个汉化(OK), 一个添加注释信息(OK)
   问题2 服务器开启后无法访问 //解决(http://briteming.blogspot.jp/2013/11/pydoc.html)(OK)
   修改源代码pydoc.py 类 DocServer 中 host='localhost' --> 外网ip
   git 上已经建了一个关于这个的库...还好...还是要回归枯燥的写接口的状态上去...
   工具平台已经搭好了...

## 2017/09/18- 2017/09/22 (仍旧继续上周的姿势)(时不我待)

1. 熟悉effect python中的进阶姿势.(OK)
   mro python继承链问题, 看过一直想写来着...(OK), 
   看下mro的实现过程. 经典类 从左至右的深度优先便利, 新式类(广度优先搜索.)	
   http://hanjianwei.com/2013/07/25/python-mro/ (讲的说的过去)
   gevent 到底是个什么破网络库啊, 我要看一下.
2. 熟悉常用查找及排序算法.(上周失败了)
   算法书 + 大量的实践练习才行.(我讨厌枯燥的练习, 喜欢带有创造性性质的延展和扩展...)
   想起一个装逼的面试官来了, 我们都自己改轮子...笑死我了...那语气想起来,现在都觉得好笑
   知其然志气所以然
3. ORM库 sqlalchemy, 继续看官方文档.(上周失败了)
   
4. 继续了解使用MQ队列, Kafka. 
   RPC(Remote Process Call)协议框架, thrift.(Done)
   写了关于thrift的简单例子:
   但是写的非常的让人不满意, 可能之前的失败影响到我了吧...
   这周主要还是继续了解其中的各个细节 + 实践.(Done)
   想看下关于thrift的实现RFC网络通信协议都用了那些网络协议
   protocol (协议层, 定义数据传输格式，可以为二进制或者XML等)
   transport (传输层，定义数据传输方式，可以为TCP/IP传输，内存共享或者文件共享等)被用作运行时库。
   再根据其thrift协议栈图可知...:) (开心...我要找的就是这个协议栈的图.)
   ![Thrift的协议栈](/images/thrift_protocol_stack.png) 
   Beanstalk 看来有必要写一波了(看了大量的文章有必要搞一篇)
   那个状态转换的图, 是整个Beanstalk的转换精髓, 当然还有最简单的防止丢失的持久化操作.
   这个搞一定很简单, 要试一试RabbitMq, 这个比Beanstalks高级一点.

5. 了解下关于nginx的负载分压方式
   关于不同的worker是如何共享进程中的数据.
   不同work和master间又是如何实现调度的.
   一个标准的nginx配置文件, 整体结构中的大模块的作用.

6. 工作任务(OK)
   添加文档接口日志.(Doing)(恶心ing)
   Jmeter 自动话测试脚本(找了一个提交form-data的例子, 明天去公司实验下. OK)
   碍于自己的及其配置不足, 线程数跑到6000已经是极限了, 各项参数还可以...
   在windows下配置Jmeter 脚本, 调大参数在linux服务器上也是可以跑滴 :)

7. 页面跳转的项目决定先搞一个首页显示我本机实时状态的超炫的页面.(OK)
   就搞这种音乐和跳动的效果了. 抄了别人的, 感觉自己好搓啊... 
   应该找一个别人写好的前端小一点项目的代码看一看...最好是带有效果的那种.
   前端还真是个大活, 有点超出我的想象了.


## 2017/09/25- 2017/10/14 (仍旧继续上周的姿势)(时不我待, 这周感觉可能会是颓废的一周，回家了尴尬不尴尬..., 更尴尬的事这个竟然就耽误了O__O "… python web 绝对不是长久之计, 而且也有些浅显了,　何必呢.)
1. 熟悉effect python中的进阶姿势.
   gevnet 有越来做的越大的趋势啊...有意思了.
   gevent 到底是个什么破网络库啊, 我要看一下.( 虽然在家, 但我打算搞定这个...)
   python 协程支持yiled, 提供了对协程的基本支持.
   gevent 提供了对协程较完善的支持. gevent是三方库, 通过greenlet实现. 
   gevent 自动切换协程. 保证始终有greenlet在执行.
   单线程IO操作.
   greenlet 自动调度的协程.

2. 熟悉常用查找及排序算法.(上周失败了, 这个以后要重点做, 虽然很恶心)
   内功不足是玩不转上乘的技术的.
   
3. 继续了解使用MQ队列, Kafka. 
   Beanstalk 看来有必要写一波了(看了大量的文章有必要搞一篇, 没必要, 就没什么东西)
   这个搞一定很简单, 要试一试RabbitMq, 这个比Beanstalks高级一点.

5. 了解下关于nginx的负载分压方式(失败)
   关于不同的worker是如何共享进程中的数据.
   不同work和master间又是如何实现调度的.
   一个标准的nginx配置文件, 整体结构中的大模块的作用.

6. 工作任务(OK)
   添加文档接口日志.(Doing)(恶心ing)
   换了位置各种恶心, 我都服气了.

7. 页面跳转的项目决定先搞一个首页显示我本机实时状态的超炫的页面.(OK)

8. 打算写出一个项目作品作自己以后面试时的条件.(Doing)
   如何清洗数据和展示是难点.
   熟悉的技术部分.
   tornado + ngnix + supervisior + (scrapy + mysql + beautibuf soup)
   
   需要了解的技术.
   html + css + js + Echars3
   
   需要找一个自然语言处理的库.
   
   scrapy 怎么搞一个抓取动态https的页面这么恶心啊, mmp的.

9. 关于前路的发展.
   要么高并发网络处理, 要么机器学习.
   之后是架构. 
   英语和算法...md. 但还是要看 --O__O "…

## 2017/10/15- 2017/10/21 (仍旧继续上周的姿势)(时不我待, 这周感觉可能会是颓废的一周，回家了尴尬不尴尬..., 更尴尬的事这个竟然就耽误了O__O "… python web 绝对不是长久之计, 而且也有些浅显了,　何必呢.)
1. 熟悉effect python中的进阶姿势.
   gevent 自动切换协程. 保证始终有greenlet在执行.
   greenlet 自动调度的协程.
   关于生成器和迭代器在参数使用上的问题(Effect Python代码的59个建议)
   迭代器多次迭代会失效问题及处理方式.

2. 熟悉常用查找及排序算法.(要不要抱着一本书猛啃啊, 纠结, md一直在纠结中, 从未开始)
   睡衣什么时候到, 干, 我要冻死在屋里了.
   
3. 继续了解使用MQ队列, Kafka. 
   Beanstalk 看来有必要写一波了(看了大量的文章有必要搞一篇, 没必要, 就没什么东西)
   这个搞一定很简单, 要试一试RabbitMq, 这个比Beanstalks高级一点.

5. 了解下关于nginx的负载分压方式
   关于不同的worker是如何共享进程中的数据.
   不同work和master间又是如何实现调度的.
   一个标准的nginx配置文件, 整体结构中的大模块的作用.

6. 工作任务(OK)
   添加文档接口日志.(Doing)

7. 页面跳转的项目决定先搞一个首页显示我本机实时状态的超炫的页面.(OK)

8. 打算写出一个项目作品作自己以后面试时的条件.(Doing, 要爬去的网页竟然需要认证了..., 不会停止我的脚步的...)
   如何清洗数据和展示是难点.
   熟悉的技术部分.
   tornado + ngnix + supervisior + (scrapy + mysql + beautibuf soup)
   需要了解的技术.
   html + css + js + Echars3
   需要找一个自然语言处理的库.
   当前问题: 
   scrapy 怎么搞一个抓取动态https的页面这么恶心啊, mmp的.
   安装结巴库分词库.(OK)
   NLTK这一坨工具类...看着就让人觉得蛋碎啊...

## 2017/10/23- 2017/10/27 (仍旧继续上周的姿势)(时不我待, 这周感觉可能会是颓废的一周，回家了尴尬不尴尬..., 更尴尬的事这个竟然就耽误了O__O "… python web 绝对不是长久之计, 而且也有些浅显了,　何必呢.)
1. 熟悉effect python中的进阶姿势.
   gevent 自动切换协程. 保证始终有greenlet在执行.
   greenlet 自动调度的协程.
   关于生成器和迭代器在参数使用上的问题(Effect Python代码的59个建议)

2. 熟悉常用查找及排序算法.(要不要抱着一本书猛啃啊, 纠结, md一直在纠结中, 从未开始)
   看数学, 看数据结构与算法分析.
   
3. 继续了解使用MQ队列, Kafka. 
   Beanstalk 看来有必要写一波了(看了大量的文章有必要搞一篇, 没必要, 就没什么东西)
   这个搞一定很简单, 要试一试RabbitMq, 这个比Beanstalks高级一点.

5. 了解下关于nginx的负载分压方式
   关于不同的worker是如何共享进程中的数据.
   不同work和master间又是如何实现调度的.
   一个标准的nginx配置文件, 整体结构中的大模块的作用.

6. 工作任务
   协助前端完善前端bug

7. 页面跳转的项目决定先搞一个首页显示我本机实时状态的超炫的页面.

8. 打算写出一个项目作品作自己以后面试时的条件.
   如何清洗数据和展示是难点.
   熟悉的技术部分.
   tornado + ngnix + supervisior + (scrapy + mysql + beautibuf soup)
   需要了解的技术.
   html + css + js + Echars3
   需要找一个自然语言处理的库.
   当前问题: 
   scrapy 怎么搞一个抓取动态https的页面这么恶心啊, mmp的.
   安装结巴库分词库.(OK)
   NLTK这一坨工具类...看着就让人觉得蛋碎啊...

9. 第一本书籍是组合数学这种英文书籍...会不会优点2B吧.
   鬼才管他呢.

10. 屠龙术在蠢货手里可能还不如烧火棍管用.
    大形势虽然很坏, 但这不代表, 我不能变好．


## 2017/11/06- 2017/11/10(高烧, 难受, 没吃药, 更难受了)

1. 关于程序的编写.(写出好代码是要花时间的, 还有良好的训练.) 
   如何驯服烂代码, 如何编写模块化代码, 如何抽象函数, 通用部分向上抽象.(OK)
   关于函数结构, 段式结构和层式结构的研究.(个人更倾向于段式结构.)(OK)
   深感自己的功力不够精深.(Failure)
   关于如何切割函数和布局接口.(OK)
   关于raise Exception抛出异常层数问题.(OK)
2. 开始看什么是数学吧, 顺便开始锻炼吧.(Doing)
   从什么是数学开始看吧, 但是还是没有看.
3. 继续我的分布式网络部分的学习吧.(Donig)
   数据分析和机器学习要等到数学有一定基础之后才可以搞...
   kafka...我最好开两个2.5美元的服务器,好能他起来kafka, 多个broker服务器.
4. 数据结构与算法(我自己都要放弃了的感觉...哭死, 面试考啊, 蛋碎.)
5. 有关http网络通信的各种关键字
6. nginx 主控的几个进程和和线程.

## 2017/11/13- 2017/11/17(Goya, 有诱惑才有动力, 加油.)

1. 关于程序的编写.(写出好代码是要花时间的, 还有良好的训练.) 
   如何驯服烂代码, 如何编写模块化代码, 如何抽象函数, 通用部分向上抽象.(OK)
   关于函数结构, 段式结构和层式结构的研究.(个人更倾向于段式结构.)(OK)
   深感自己的功力不够精深.(Doing)
   关于如何切割函数和布局接口.(OK)
   关于raise Exception抛出异常层数问题.(OK)
   程序更应该注重可读性, 而不是玩多余的逻辑技巧.
2. 开始看什么是数学吧, 顺便开始锻炼吧.(Failure)
   从什么是数学开始看吧, 但是还是没有看.
3. 继续我的分布式网络部分的学习吧.(Donig)
   数据分析和机器学习要等到数学有一定基础之后才可以搞...
   kafka...我最好开两个2.5美元的服务器,好能他起来kafka, 多个broker服务器.
   不管博士用不用了, 我都打算开一个2.5$的服务器自己跑下分布式的东西
4. 数据结构与算法(我自己都要放弃了的感觉...哭死, 面试考啊, 蛋碎.)(Doing)
5. 有关http网络通信的各种关键字.(Doing)
6. nginx 主控的几个进程和和线程.(Doing)


## 2017/11/20- 2017/11/27(Goya, 有诱惑才有动力, 加油.)

1. 关于程序的编写.(写出好代码是要花时间的, 还有良好的训练.) 
   在exception和finnaly中对程序进行异常处理及收尾处理.
   功能代码段应该抽成对应的函数, 对程序可读性有提升.
   对大量不断重复代码段, 可进行代码的优化, 抽象成相应的函数.
   函数公共库函数和自用函数(我对此的理解):
   公共库函数: 通用性为主.
   自用函数: 简洁代码逻辑为主.
   对于程序中对常量的使用, 应该借鉴C++编码方式, 写成常量的方式,
   便于修改和阅读.
2. 开始看什么是数学吧, 顺便开始锻炼吧.(Failure)
   从什么是数学开始看吧, 但是还是没有看.
3. 继续我的分布式网络部分的学习吧.(Donig)
   数据分析和机器学习要等到数学有一定基础之后才可以搞...
   kafka...我最好开两个2.5美元的服务器,好能他起来kafka, 多个broker服务器.
   不管博士用不用了, 我都打算开一个2.5$的服务器自己跑下分布式的东西
4. 数据结构与算法(我自己都要放弃了的感觉...哭死, 面试考啊, 蛋碎.)(Doing)
5. 有关http网络通信的各种关键字.(Doing)
   HTTP(TCP/IP)
6. nginx 主控的几个进程和和线程.(Doing)


## 2017/11/20- 2017/11/27(Goya, 有诱惑才有动力, 加油.)

1. 小项目, 虎扑标题分析及词性分类.
   scrapy + beafbeatufulsoup4 + chrome开发者工具.
   已完成抓取(标题, 用户名, 发布时间)
   遇到的坑记录下:
   mysql user 表中字段不再是password而是authentication_string
   Ubuntu系统中存在/etc/mysql/debian.cnf配置文件, 其中的用户名和密码可对mysql进行登陆.
   老老实实的把我的samba服务器搭好了再说吧, 这么写太他妈的费劲了.
   Samba本身具备SMB协议，它实现了局域网内与Windows系列计算机的资源共享(日了狗!)
   我这命弱逼么,mysql workBench, 用不明白竟然...(承认弱逼, 换回navicat)
   搞定!! pycharm + deployment 工具(我回去要去写一下这个, 哇哈哈哈).
   分词工具, 结巴分词.
   词性工具是什么呢.
   入库搞定.(附带naviact 破解完毕:))
2. 公司代码初体验.
   总有傻逼用同一个字段去定义不同格式和不同含义的表示, 好像很快捷很聪明, 给后期维护带来了无尽的麻烦
   小聪明式的编程方式, 和半路出家的人太操蛋了, 能跑就行, 妈的.
   我俗称这种人为傻逼一样的同行, 垃圾.
   公司让我心寒...
   公司其他项目采用了MQ做异步解耦, 看一下在自己的项目中实践.
   开始学习RabbitMQ. 学习完毕, 关于如何处理不同类型的轮训, 在同一dict类型队列消息里做处理即可.
   如何做到低耦合, 高内聚, 对两个系统的异步和解耦.
   异步和解耦容易实现, 如何对不同的类型的队列信息做分类处理, 开不同的线程去做么.
   确实是可以做到, 异步和解耦, 但是在Product和Consumer端如何设计处理消息是个问题.

3. 关于用Redis做消息队列的持久化探究, 给公司的项目做解耦.
   关于消息队列的技术选型, 决定采用RabbitMQ
   原因如下:
   1. 公司内部两个项目组, 均采用RabbitMQ作为消息队列(白盒和测评)
   2. Redis的MQ插件普及度及效率, 网络风评RabbitMQ更好.
   3. rabbitmq server 安装完毕, rabbitmq-management插件, 这个可视化插件不错的样子.
   4. 有关业务场景不合适卧槽了...
4. 关于配置公私钥登陆服务器问题.
5. 关于NLP对于词性的分析工具.
   分词工具用结巴, 词性分析工具用什么呢.
